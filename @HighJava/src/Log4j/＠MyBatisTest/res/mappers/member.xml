<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다. 사용할 수 있는 기본적인 태그들 <select> ~~~ 
		</select> <insert> ~~~ </insert> <update> ~~~ </update> <delete> ~~~ </delete> 
		위 태그에서 사용되는 속성들 1) id속성: 해당 태그를 호출할 때 <mapper>태그의 namespace와 연결하여 사용하는 이름 
		2) parameterType 속성 : SQL문에 사용될 데이터가 들어있는 객체타입 지정 (보통 VO클래스, 자바의 자료형 이름 등이 
		사용됨) (typeAlias로 지정한 alias명을 사용할 수 있다.) 3) resultType 속성 : select문을 실행한 결과를 
		담을 객체타입을 지정한다. (보통 VO클래스, 자바의 자료형 이름 등이 사용됨) 4) resultMap 속성: 결과 레코드 컬럼명과 
		VO객체의 property명이 다를 경우에 적절한 매핑을 위해 사용한다. -->

	<insert id="insertMember"
		parameterType="kr.or.ddit.member.vo.MemberVO">

		insert into mymember
		(MEM_ID, MEM_NAME, MEM_TEL,
		MEM_ADDR, REG_DT)
		values(#{memId}, #{memName},
		#{memTel}, #{memAddr},
		sysdate)

	</insert>


	<!-- parameterType타입의 객체가 넘어와요!! -->
	<update id="updateMember"
		parameterType="kr.or.ddit.member.vo.MemberVO">

		update mymember
		set MEM_NAME = #{memName},
		MEM_TEL =
		#{memTel},
		MEM_ADDR = #{memAddr}
		where MEM_ID =#{memId}

	</update>


	<!-- 매개변수로 오는 값의 타입이 머냐? parameterType="String" -->
	<delete id="deleteMember" parameterType="String">

		delete from mymember
		where mem_id = #{memId}

	</delete>



	<select id="selectAllMember"
		resultType="kr.or.ddit.member.vo.MemberVO">

		<!-- select mem_id as memId,
		mem_name as memName,
		mem_tel as
		memTel,
		mem_addr as memAddr
		from mymember -->

		select mem_id,
		mem_name,
		mem_tel,
		mem_addr
		from mymember

		<!-- 
		mybatis-config.xml 파일에 아래와 같이 추가하면  쿼리 뒤에 as 안써도 됨 
		
		<settings>
		<setting name="mapUnderscoreToCamelCase" value="true"/>  
		</settings> 
		-->
		
	</select>



	<!-- resultType="kr.or.ddit.member.vo.MemberVO" 이게 mybatis-config.xml에 alias로 
		지정해줌 => resultType="MemberVO" -->
	<select id="selectMember" parameterType="String"
		resultType="MemberVO">

		select mem_id as memId,
		mem_name as memName,
		mem_tel as
		memTel,
		mem_addr as memAddr
		from mymember
		where mem_id = #{memId}

	</select>

	<select id="checkMember" parameterType="String" resultType="int">

		select count(*) as cnt
		from mymember
		where mem_id = #{memId}

	</select>

	<resultMap type="MemberVO" id="memMap">
		<id column="mem_id" property="memId" /> <!-- mem_id는 memId이름으로 대체한다고 mybatis한테 알려주기 / id  = key값이라는 뜻임 id대신 result 써도 무관 -->
		<result column="mem_name" property="memName" />
		<result column="mem_tel" property="memTel" />
		<result column="mem_addr" property="memAddr" />
	</resultMap>

	<select id="searchMember" parameterType="MemberVO"
		resultMap="memMap"> <!-- memMap을 이용해서 mappering 해주세요  -->
		<!-- resultMap : 복잡한 결과 매핑을 간편하게 만들어주기 위해 만들어진 태그 -->

		select * from mymember where 1=1

		<if test="memId != null and memId != ''">
			and mem_id = #{memId}
		</if>
		
		<if test="memName != null and memName != ''">
			and mem_name = #{memName}
		</if>

		<if test="memTel != null and memTel != ''">
			and mem_tel = #{memTel}
		</if>

		<if test="memAddr != null and memTel != ''">
			and mem_addr like '%' || #{memAddr} || '%'
		</if>


	</select>

</mapper>












